class e{constructor(e){this.marked=e}}class t{constructor(e){this.mineCount=e}}class i{}class n{constructor(e,t,i,h){this.renderSize={width:e,height:t},this.gameSize={width:i,height:h};let s={x:0,y:0,width:this.renderSize.width,height:this.renderSize.height};this.minefieldBounds=n.fitRectangle({width:i,height:h},s),this.cellSize=this.minefieldBounds.width/i}getCellCoordinatesByMouseLocation(e){let t=Math.floor((e.x-this.minefieldBounds.x)/this.cellSize);if(t<0||t>=this.gameSize.width)return null;let i=Math.floor((e.y-this.minefieldBounds.y)/this.cellSize);return i<0||i>=this.gameSize.height?null:{x:t,y:i}}getCellBorderX(e){return Math.floor(this.minefieldBounds.x+this.cellSize*e)}getCellBorderY(e){return Math.floor(this.minefieldBounds.y+this.cellSize*e)}getCellBounds(e,t){let i=this.getCellBorderX(e),n=this.getCellBorderY(t);return{x:i,y:n,width:this.getCellBorderX(e+1)-i,height:this.getCellBorderY(t+1)-n}}static fitRectangle(e,t){if(t.width*e.height<t.height*e.width){let i=t.width*e.height/e.width;return{x:0,y:(t.height-i)/2,width:t.width,height:i}}{let i=t.height*e.width/e.height;return{x:(t.width-i)/2,y:0,width:i,height:t.height}}}}class h{constructor(e,t){this.mouseDownCell=null,this.isMouseCaptured=!1,this.game=e;let i=document.createElement("canvas");i.style.touchAction="manipulation";let n=i.getContext("2d");if(!n)throw"Unable to obtain a 2D drawing context.";this.context=n,this.minefieldContainer=t,t.appendChild(i),window.addEventListener("resize",()=>this.refreshCanvasLayout()),this.refreshCanvasLayout(),i.addEventListener("mousedown",e=>this.onMouseDown(e)),i.addEventListener("mousemove",e=>this.onMouseMove(e)),i.addEventListener("mouseup",e=>this.onMouseUp(e)),i.addEventListener("dblclick",e=>this.onDoubleClick(e)),i.addEventListener("contextmenu",e=>this.onContextMenu(e),!1)}refreshCanvasLayout(){let e=window.devicePixelRatio||1,t=this.minefieldContainer.clientWidth*e,i=this.minefieldContainer.clientHeight*e;if(this.layout&&this.layout.renderSize.width===t&&this.layout.renderSize.height===i)return;this.layout=new n(t,i,this.game.width,this.game.height);let h=this.context.canvas;h.style.width=this.minefieldContainer.clientWidth+"px",h.style.height=this.minefieldContainer.clientHeight+"px",h.width=t,h.height=i,this.render()}onContextMenu(e){if(e.preventDefault(),this.game.conclusion)return;let t=this.getCellByMouseLocation(e);t&&this.game.tryToggleMark(t.x,t.y)&&this.render()}onMouseDown(e){this.game.conclusion||0!==e.button||(this.isMouseCaptured=!0,this.updateMouseDownCell(e))}onMouseMove(e){this.isMouseCaptured&&this.updateMouseDownCell(e)}onMouseUp(e){0===e.button&&(this.isMouseCaptured=!1,this.mouseDownCell&&(this.game.tryOpen(this.mouseDownCell.x,this.mouseDownCell.y),this.mouseDownCell=null,this.render()))}onDoubleClick(e){if(!this.game.conclusion&&0===e.button){let t=this.getCellByMouseLocation(e);t&&this.game.openSurroundingIfSatisfied(t.x,t.y)&&this.render()}}updateMouseDownCell(e){let t=this.getCellByMouseLocation(e);h.areSame(t,this.mouseDownCell)||(this.mouseDownCell=t,this.render())}static areSame(e,t){return e?!!t&&e.x===t.x&&e.y===t.y:!t}getCellByMouseLocation(e){let t=window.devicePixelRatio||1;return this.layout.getCellCoordinatesByMouseLocation({x:e.offsetX*t,y:e.offsetY*t})}render(){let{renderSize:e,minefieldBounds:t,cellSize:i}=this.layout;this.context.clearRect(0,0,e.width,e.height),this.context.fillStyle="#d0d0d0",this.context.fillRect(t.x,t.y,t.width,t.height),this.context.strokeStyle="#a0a0a0";for(let e=0;e<this.game.height;e++){let i=this.layout.getCellBorderY(e);this.context.beginPath(),this.context.moveTo(t.x,i),this.context.lineTo(t.x+t.width,i),this.context.stroke()}for(let e=0;e<this.game.width;e++){let i=this.layout.getCellBorderX(e);this.context.beginPath(),this.context.moveTo(i,t.y),this.context.lineTo(i,t.y+t.height),this.context.stroke()}this.context.font="bold "+.5*i+"px Georgia";for(let e=0;e<this.game.height;e++)for(let t=0;t<this.game.width;t++)this.drawCell({x:t,y:e},this.layout.getCellBounds(t,e),i)}drawCell(i,n,h){let{x:s,y:o}=i,l=this.mouseDownCell&&this.mouseDownCell.x===s&&this.mouseDownCell.y===o,a=this.game.getCellAt(s,o);if(a instanceof e&&(a.marked||!l)){let e=.1*h,t=n.x+n.width,i=n.y+n.height;this.context.beginPath(),this.context.moveTo(n.x,n.y),this.context.lineTo(n.x,i),this.context.lineTo(n.x+e,i-e),this.context.lineTo(n.x+e,n.y+e),this.context.lineTo(t-e,n.y+e),this.context.lineTo(t,n.y),this.context.closePath(),this.context.fillStyle="#e8e8e8",this.context.fill(),this.context.beginPath(),this.context.moveTo(t,i),this.context.lineTo(t,n.y),this.context.lineTo(t-e,n.y+e),this.context.lineTo(t-e,i-e),this.context.lineTo(n.x+e,i-e),this.context.lineTo(n.x,i),this.context.closePath(),this.context.fillStyle="#a0a0a0",this.context.fill()}let r=a instanceof e?a.marked?"\uD83D\uDEA9":null:a instanceof t?0!==a.mineCount?a.mineCount.toString():null:"\uD83D\uDCA5";null!==r&&(a instanceof t&&(this.context.fillStyle=["blue","green","#e00","darkblue","brown","darkcyan","black","gray"][a.mineCount-1]),this.drawCenteredText(r,n))}drawCenteredText(e,t){let i=this.context.measureText(e);this.context.textBaseline="middle",this.context.fillText(e,t.x+(t.width-i.width)/2,t.y+t.height/2)}}new h(new class{constructor(e,t,i){this.width=e,this.height=t,this.mineCount=i,this.remainingToOpen=e*t-i,this.gameConclusion=null,this.stateMap=Array(t);for(let i=0;i<t;i++)this.stateMap[i]=Array(e);this.mineMap=null}get conclusion(){return this.gameConclusion}getCellAt(n,h){let s=this.stateMap[h][n];if("revealed"!==s)return new e("marked"===s);if(!this.mineMap)throw"mineMap should be initialized before any cell state is revealed.";let o=this.mineMap[h][n];return"bomb"===o?new i:new t(o)}tryToggleMark(e,t){let i=this.stateMap[t][e];return"revealed"!==i&&(this.stateMap[t][e]="marked"===i?void 0:"marked",!0)}tryOpen(e,t){let i=this.stateMap[t][e];if("revealed"===i||"marked"===i)return!1;if(null===this.mineMap&&this.initializeMines({x:e,y:t}),!this.mineMap)throw"mineMap should be initialized before any cell state is revealed.";return"bomb"===this.mineMap[t][e]?this.explode():this.openKnownGoodCell(e,t),!0}openSurroundingIfSatisfied(e,i){let n=this.getCellAt(e,i);if(n instanceof t){let t=this.getSurroundingCoordinates(e,i),h=[],s=0;for(let e=0;e<t.length;e++){let i=t[e],n=this.stateMap[i.y][i.x];"marked"===n?s++:"revealed"!==n&&h.push(i)}if(s===n.mineCount){for(let e=0;e<h.length;e++){let t=h[e];if(this.tryOpen(t.x,t.y),this.gameConclusion)break}return!0}}return!1}initializeMines(e){this.mineMap=Array(this.height);for(let e=0;e<this.height;e++)this.mineMap[e]=Array(this.width).fill(0);for(let t=0;t<this.mineCount;){let i=Math.floor(Math.random()*this.width),n=Math.floor(Math.random()*this.height);if(1>=Math.abs(i-e.x)&&1>=Math.abs(n-e.y)||"bomb"===this.mineMap[n][i])continue;this.mineMap[n][i]="bomb";let h=this.getSurroundingCoordinates(i,n);for(let e=0;e<h.length;e++){let t=h[e],i=this.mineMap[t.y][t.x];"bomb"!==i&&(this.mineMap[t.y][t.x]=i+1)}t++}console.log(this.mineMap)}explode(){if(!this.mineMap)throw"mineMap should be initialized before any cell state is revealed.";this.gameConclusion="loss";for(let e=0;e<this.height;e++)for(let t=0;t<this.width;t++)"bomb"===this.mineMap[e][t]&&(this.stateMap[e][t]="revealed")}openKnownGoodCell(e,t){if(!this.mineMap)throw"mineMap should be initialized before any cell state is revealed.";let i=[{x:e,y:t}];for(;;){let e=i.pop();if(!e)break;let t=this.stateMap[e.y][e.x];if("marked"!==t&&"revealed"!==t){if(this.stateMap[e.y][e.x]="revealed",this.remainingToOpen--,0===this.remainingToOpen){this.gameConclusion="win";for(let e=0;e<this.height;e++)for(let t=0;t<this.width;t++)"bomb"===this.mineMap[e][t]&&(this.stateMap[e][t]="marked");break}0===this.mineMap[e.y][e.x]&&(i=i.concat(this.getSurroundingCoordinates(e.x,e.y)))}}}getSurroundingCoordinates(e,t){let i=[];return t>0&&i.push({x:e,y:t-1}),t<this.height-1&&i.push({x:e,y:t+1}),e>0&&(i.push({x:e-1,y:t}),t>0&&i.push({x:e-1,y:t-1}),t<this.height-1&&i.push({x:e-1,y:t+1})),e<this.width-1&&(i.push({x:e+1,y:t}),t>0&&i.push({x:e+1,y:t-1}),t<this.height-1&&i.push({x:e+1,y:t+1})),i}}(30,16,99),document.getElementById("minefield-container"));
//# sourceMappingURL=index.b0f8f33a.js.map
